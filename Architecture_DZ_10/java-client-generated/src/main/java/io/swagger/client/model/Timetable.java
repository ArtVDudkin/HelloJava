/*
 * Cloud service for robot-vacuum cleaner
 * This is a study project considering server based on the OpenAPI 3.0 specification.  You can now help us improve the API whether it's by making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.
 *
 * OpenAPI spec version: 0.0.2
 * Contact: kardan97@yandex.ru
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Result;
import io.swagger.client.model.Room;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Timetable
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-12-09T12:21:03.478Z[GMT]")
public class Timetable {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("datetime")
  private OffsetDateTime datetime = null;

  @SerializedName("roomID")
  private Room roomID = null;

  @SerializedName("resultID")
  private Result resultID = null;

  public Timetable id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Timetable datetime(OffsetDateTime datetime) {
    this.datetime = datetime;
    return this;
  }

   /**
   * Get datetime
   * @return datetime
  **/
  @Schema(description = "")
  public OffsetDateTime getDatetime() {
    return datetime;
  }

  public void setDatetime(OffsetDateTime datetime) {
    this.datetime = datetime;
  }

  public Timetable roomID(Room roomID) {
    this.roomID = roomID;
    return this;
  }

   /**
   * Get roomID
   * @return roomID
  **/
  @Schema(description = "")
  public Room getRoomID() {
    return roomID;
  }

  public void setRoomID(Room roomID) {
    this.roomID = roomID;
  }

  public Timetable resultID(Result resultID) {
    this.resultID = resultID;
    return this;
  }

   /**
   * Get resultID
   * @return resultID
  **/
  @Schema(description = "")
  public Result getResultID() {
    return resultID;
  }

  public void setResultID(Result resultID) {
    this.resultID = resultID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Timetable timetable = (Timetable) o;
    return Objects.equals(this.id, timetable.id) &&
        Objects.equals(this.datetime, timetable.datetime) &&
        Objects.equals(this.roomID, timetable.roomID) &&
        Objects.equals(this.resultID, timetable.resultID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, datetime, roomID, resultID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Timetable {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    datetime: ").append(toIndentedString(datetime)).append("\n");
    sb.append("    roomID: ").append(toIndentedString(roomID)).append("\n");
    sb.append("    resultID: ").append(toIndentedString(resultID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
