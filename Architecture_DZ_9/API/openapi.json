{
  "openapi": "3.0.3",
  "info": {
    "title": "VDS service",
    "description": "This is a study project considering server based on the OpenAPI 3.0 specification. \nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.",
    "contact": {
      "email": "kardan97@yandex.ru"
    },
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "https://localhost:8080/api/v1"
    }
  ],
  "tags": [
    {
      "name": "order",
      "description": "Everything about orders"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "VDS specification",
      "description": "Operations about ready VDS specifications"
    },
    {
      "name": "item",
      "description": "Operations about items of VDS"
    }
  ],
  "paths": {
    "/order/add": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Create a new order",
        "description": "Create a new order",
        "operationId": "createOrder",
        "parameters": [
          {
            "name": "userID",
            "in": "query",
            "description": "user ID account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OS name",
            "in": "query",
            "description": "OS preffered",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OS version",
            "in": "query",
            "description": "OS version preffered",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "procName",
            "in": "query",
            "description": "processor preffered",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "procCores",
            "in": "query",
            "description": "processor cores preffered",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "procFreq",
            "in": "query",
            "description": "processor frequency preffered",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ram",
            "in": "query",
            "description": "RAM volume preffered",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "disk type",
            "in": "query",
            "description": "Disk type preffered",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disk volume",
            "in": "query",
            "description": "Disk volume preffered",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ip type",
            "in": "query",
            "description": "IP type preffered",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ip quantity",
            "in": "query",
            "description": "IP quantity preffered",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "months",
            "in": "query",
            "description": "months payed",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "create a new order",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/order/{orderId}": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get order by ID",
        "description": "Get order by ID",
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "put": {
        "tags": [
          "order"
        ],
        "summary": "Update info about an existing order by Id",
        "description": "Update info about an existing order by Id",
        "operationId": "updateOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existing order in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "delete": {
        "tags": [
          "order"
        ],
        "summary": "Delete an order by ID",
        "description": "delete an order by ID",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "Order ID to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid order ID value"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/user/add": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user account",
        "description": "This create a new user account.",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username for create account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "User email for news sending",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "User phone for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Created user account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{userID}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by ID",
        "description": "Get user by ID",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "The user ID that needs to be returned",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user by ID",
        "description": "This update info in user account.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "user id that need to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update info in existing user account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user by ID",
        "description": "This delete user account.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "user ID that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/specification/all": {
      "get": {
        "tags": [
          "VDS specification"
        ],
        "summary": "Get all VDS specifications info",
        "description": "Get all VDS specifications info",
        "operationId": "getAllVDS",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Specification"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Specification"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/specification/{specID}": {
      "get": {
        "tags": [
          "VDS specification"
        ],
        "summary": "Get VDS specification info by ID",
        "description": "Get VDS specification info by ID",
        "operationId": "getSpec",
        "parameters": [
          {
            "name": "specID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Specification"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Specification"
                }
              }
            }
          },
          "400": {
            "description": "Invalid specification ID supplied"
          },
          "404": {
            "description": "Specification not found"
          }
        }
      },
      "put": {
        "tags": [
          "VDS specification"
        ],
        "summary": "Update VDS specification info by ID",
        "description": "Update VDS specification info by ID",
        "operationId": "updateSpec",
        "parameters": [
          {
            "name": "specID",
            "in": "path",
            "description": "specification ID that need to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Specification"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Specification"
                }
              }
            }
          },
          "400": {
            "description": "Invalid specification ID supplied"
          },
          "404": {
            "description": "Specification not found"
          }
        }
      },
      "delete": {
        "tags": [
          "VDS specification"
        ],
        "summary": "Delete specification by ID",
        "description": "This delete specification by ID.",
        "operationId": "deleteSpec",
        "parameters": [
          {
            "name": "specID",
            "in": "path",
            "description": "The specification ID that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Specification"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Specification"
                }
              }
            }
          },
          "400": {
            "description": "Invalid specification ID supplied"
          },
          "404": {
            "description": "Specification not foun"
          }
        }
      }
    },
    "/item/OS/all": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Get all OS options info",
        "description": "Get all OS options info",
        "operationId": "getOS",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OS"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OS"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/item/processor/all": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Get all processor options info",
        "description": "Get all processor options info",
        "operationId": "getProc",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Processor"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Processor"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/item/RAM/all": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Get all RAM options info",
        "description": "Get all RAM options info",
        "operationId": "getRAM",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RAM"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RAM"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/item/disk/all": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Get all disk options info",
        "description": "Get all disk options info",
        "operationId": "getDisk",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Disk"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Disk"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/item/ip/all": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Get all IP options info",
        "description": "Get all IP options info",
        "operationId": "getIP",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IP"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IP"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "phone": {
            "type": "integer",
            "format": "int32",
            "example": 89991234567
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "money": {
            "type": "integer",
            "format": "int32"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "orderNo": {
            "type": "integer",
            "format": "int64"
          },
          "orderDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "userID": {
            "$ref": "#/components/schemas/User"
          },
          "specVDS": {
            "$ref": "#/components/schemas/Specification"
          },
          "monthsPayed": {
            "type": "integer",
            "format": "int32"
          },
          "orderExpiration": {
            "type": "string"
          }
        },
        "xml": {
          "name": "orders"
        }
      },
      "Specification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "OS": {
            "$ref": "#/components/schemas/OS"
          },
          "Processor": {
            "$ref": "#/components/schemas/Processor"
          },
          "RAM": {
            "$ref": "#/components/schemas/RAM"
          },
          "Disk": {
            "$ref": "#/components/schemas/Disk"
          },
          "IP": {
            "$ref": "#/components/schemas/IP"
          }
        },
        "xml": {
          "name": "specification"
        }
      },
      "OS": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nameOS": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          }
        },
        "xml": {
          "name": "OS"
        }
      },
      "Processor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "cores": {
            "type": "integer",
            "format": "int32"
          },
          "freq": {
            "type": "string"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          }
        },
        "xml": {
          "name": "processor"
        }
      },
      "RAM": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "GB": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          }
        },
        "xml": {
          "name": "ram"
        }
      },
      "Disk": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "GB": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          }
        },
        "xml": {
          "name": "disk"
        }
      },
      "IP": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "quantityIP": {
            "type": "integer",
            "format": "int32"
          }
        },
        "xml": {
          "name": "ip"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "requestBodies": {
      "Order": {
        "description": "Order is object that needs to be added to the VDS store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          }
        }
      }
    }
  }
}