/*
 * VDS service
 * This is a study project considering server based on the OpenAPI 3.0 specification.  You can now help us improve the API whether it's by making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: kardan97@yandex.ru
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Disk;
import io.swagger.client.model.IP;
import io.swagger.client.model.OS;
import io.swagger.client.model.Processor;
import io.swagger.client.model.RAM;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Specification
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-12-15T15:11:03.787Z[GMT]")
public class Specification {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("OS")
  private OS OS = null;

  @SerializedName("Processor")
  private Processor processor = null;

  @SerializedName("RAM")
  private RAM RAM = null;

  @SerializedName("Disk")
  private Disk disk = null;

  @SerializedName("IP")
  private IP IP = null;

  public Specification id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Specification OS(OS OS) {
    this.OS = OS;
    return this;
  }

   /**
   * Get OS
   * @return OS
  **/
  @Schema(description = "")
  public OS getOS() {
    return OS;
  }

  public void setOS(OS OS) {
    this.OS = OS;
  }

  public Specification processor(Processor processor) {
    this.processor = processor;
    return this;
  }

   /**
   * Get processor
   * @return processor
  **/
  @Schema(description = "")
  public Processor getProcessor() {
    return processor;
  }

  public void setProcessor(Processor processor) {
    this.processor = processor;
  }

  public Specification RAM(RAM RAM) {
    this.RAM = RAM;
    return this;
  }

   /**
   * Get RAM
   * @return RAM
  **/
  @Schema(description = "")
  public RAM getRAM() {
    return RAM;
  }

  public void setRAM(RAM RAM) {
    this.RAM = RAM;
  }

  public Specification disk(Disk disk) {
    this.disk = disk;
    return this;
  }

   /**
   * Get disk
   * @return disk
  **/
  @Schema(description = "")
  public Disk getDisk() {
    return disk;
  }

  public void setDisk(Disk disk) {
    this.disk = disk;
  }

  public Specification IP(IP IP) {
    this.IP = IP;
    return this;
  }

   /**
   * Get IP
   * @return IP
  **/
  @Schema(description = "")
  public IP getIP() {
    return IP;
  }

  public void setIP(IP IP) {
    this.IP = IP;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Specification specification = (Specification) o;
    return Objects.equals(this.id, specification.id) &&
        Objects.equals(this.OS, specification.OS) &&
        Objects.equals(this.processor, specification.processor) &&
        Objects.equals(this.RAM, specification.RAM) &&
        Objects.equals(this.disk, specification.disk) &&
        Objects.equals(this.IP, specification.IP);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, OS, processor, RAM, disk, IP);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Specification {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    OS: ").append(toIndentedString(OS)).append("\n");
    sb.append("    processor: ").append(toIndentedString(processor)).append("\n");
    sb.append("    RAM: ").append(toIndentedString(RAM)).append("\n");
    sb.append("    disk: ").append(toIndentedString(disk)).append("\n");
    sb.append("    IP: ").append(toIndentedString(IP)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
