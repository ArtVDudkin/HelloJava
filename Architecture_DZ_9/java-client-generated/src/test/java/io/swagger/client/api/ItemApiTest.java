/*
 * VDS service
 * This is a study project considering server based on the OpenAPI 3.0 specification.  You can now help us improve the API whether it's by making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: kardan97@yandex.ru
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.Disk;
import io.swagger.client.model.IP;
import io.swagger.client.model.OS;
import io.swagger.client.model.Processor;
import io.swagger.client.model.RAM;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ItemApi
 */
@Ignore
public class ItemApiTest {

    private final ItemApi api = new ItemApi();

    /**
     * Get all disk options info
     *
     * Get all disk options info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getDiskTest() throws Exception {
        List<Disk> response = api.getDisk();

        // TODO: test validations
    }
    /**
     * Get all IP options info
     *
     * Get all IP options info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getIPTest() throws Exception {
        List<IP> response = api.getIP();

        // TODO: test validations
    }
    /**
     * Get all OS options info
     *
     * Get all OS options info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getOSTest() throws Exception {
        List<OS> response = api.getOS();

        // TODO: test validations
    }
    /**
     * Get all processor options info
     *
     * Get all processor options info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getProcTest() throws Exception {
        List<Processor> response = api.getProc();

        // TODO: test validations
    }
    /**
     * Get all RAM options info
     *
     * Get all RAM options info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getRAMTest() throws Exception {
        List<RAM> response = api.getRAM();

        // TODO: test validations
    }
}
